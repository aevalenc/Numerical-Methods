# This is a basic workflow to help you get started with Actions

name: Heimdall

# Controls when the workflow will run

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  pull_request:
    types: [opened, synchronize, labeled]
  issue_comment:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a multiple jobs
  bazel-build-and-test-gcc12-macos-x86_64:
    if: contains(github.event.pull_request.labels.*.name, 'check') || contains(github.event.comment.body, 'recheck')

    # The type of runner that the job will run on
    runs-on: macos-13

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout to PR branch
        uses: actions/checkout@v4

      - name: Setup bazel
        uses: bazelbuild/setup-bazelisk@v3

      - name: Install GCC 12
        run: |
          brew update
          brew install gcc@12
          (brew --prefix gcc@12)
          echo 'export PATH="/usr/local/opt/gcc@12/bin:$PATH"' >> ~/.zshrc
          echo 'export LDFLAGS="-L/usr/local/opt/gcc@12/lib"' >> ~/.zshrc
          echo 'export CPPFLAGS="-I/usr/local/opt/gcc@12/include"' >> ~/.zshrc
          source ~/.zshrc

      - name: Echo GCC version
        run: gcc-12 --version

      - name: debug build
        run: bazel build --config=gcc12_macos_x86_64 --config=debug --verbose_failures //... -- -//matrix_solvers/iterative_solvers/jacobi_mpi/...

      - name: fastbuild
        run: bazel test --config=gcc12_macos_x86_64 --compilation_mode=fastbuild --test_output=all --verbose_failures //... -- -//matrix_solvers/iterative_solvers/jacobi_mpi/...

  bazel-build-and-test-clang18-macos-arm64:
    if: contains(github.event.pull_request.labels.*.name, 'check') || contains(github.event.comment.body, 'recheck')

    # The type of runner that the job will run on
    runs-on: macos-14

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout to PR branch
        uses: actions/checkout@v4

      - name: Setup bazel
        uses: bazelbuild/setup-bazelisk@v3

      - name: Install clang 18
        run: |
          brew update
          brew install llvm@18
          (brew --prefix llvm@18)
          echo 'export PATH="/opt/homebrew/opt/llvm@18/bin:$PATH"' >> ~/.zshrc
          echo 'export LDFLAGS="-L/opt/homebrew/opt/llvm@18/lib"' >> ~/.zshrc
          echo 'export CPPFLAGS="-I/opt/homebrew/opt/llvm@18/include"' >> ~/.zshrc
          source ~/.zshrc
        
      - name: debug build
        run: bazel build --config=clang18_macos_aarch64 --config=debug --verbose_failures //... -- -//matrix_solvers/iterative_solvers/jacobi_mpi/...

      - name: fastbuild
        run: bazel build --config=clang18_macos_aarch64 --compilation_mode=fastbuild --verbose_failures //... -- -//matrix_solvers/iterative_solvers/jacobi_mpi/...

      - name: test
        run: bazel test --config=clang18_macos_aarch64 --compilation_mode=fastbuild --test_output=all --verbose_failures //... -- -//matrix_solvers/iterative_solvers/jacobi_mpi/...

  bazel-build-and-test-mpi-clang17-macos-x86_64:
    if: contains(github.event.pull_request.labels.*.name, 'check') || contains(github.event.comment.body, 'recheck')

    runs-on: macos-14
    steps:

      - name: Install OpenMPI
        run: |
          brew update
          brew install open-mpi

      - name: Display MPI details
        run: |
          mpicxx --version
          mpicxx --showme

      # - name: debug build
      #   run: bazel build --config=mpi_clang17_macos_x86_64 --config=debug --verbose_failures //... -- -//matrix_solvers/iterative_solvers/jacobi_mpi/...

      # - name: fastbuild
      #   run: bazel build --config=mpi_clang17_macos_x86_64 --compilation_mode=fastbuild --verbose_failures //... -- -//matrix_solvers/iterative_solvers/jacobi_mpi/...

      # - name: test
      #   run: bazel test --config=mpi_clang17_macos_x86_64 --compilation_mode=fastbuild --test_output=all --verbose_failures //... -- -//matrix_solvers/iterative_solvers/jacobi_mpi/...
